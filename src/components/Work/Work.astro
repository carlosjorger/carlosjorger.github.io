---
import Project from './Project.astro';
import Subtitle from '@shared/Subtitle.astro';
import IconAstro from '@icons/IconAstro.astro';
import IconTailwind from '@icons/IconTailwind.astro';
import IconVue from '@icons/IconVue.astro';
import IconAngular from '@icons/IconAngular.astro';
import IconRust from '@icons/IconRust.astro';
import IconSvelte from '@icons/IconSvelte.astro';
import IconReact from '@icons/IconReact.astro';
import SectionContainer from '@components/shared/SectionContainer.astro';
import IconTypescript from '@components/icons/IconTypescript.astro';

export interface Props {
	PROJECTS_TITLE: string;
	PROYECTS: {
		CUVIMAKER: ProjectI18n;
		RUSTY_COPIER: ProjectI18n;
		ANGULAR_PORTFOLIO: ProjectI18n;
		VUE_FLUID_DND: ProjectI18n;
	};
}
type ProjectI18n = {
	description: string;
	anchorLabel: string;
};
export type TAG = {
	name: string;
	class: string;
	icon: (_props: Record<string, any>) => any;
};
type Project = {
	id: string;
	description: string;
	title: string;
	anchorLabel: string;
	githubLink: string;
	imageSrc: string;
	website?: string;
	tags: TAG[];
};
const TAGS = {
	ASTRO: {
		name: 'Astro',
		class: 'bg-amber-800/50 text-amber-200/80 border-amber-200/60',
		icon: IconAstro,
	},
	TAILWIND: {
		name: 'Tailwindcss',
		class: 'bg-sky-800/50 text-sky-200/80 border-sky-200/60',
		icon: IconTailwind,
	},
	VUE: {
		name: 'Vue',
		class: 'bg-emerald-800/50 text-emerald-200/80 border-emerald-200/60',
		icon: IconVue,
	},
	REACT: {
		name: 'React',
		class: 'bg-cyan-800/50 text-cyan-200/80 border-cyan-200/60',
		icon: IconReact,
	},
	SVELTE: {
		name: 'Svelte',
		class: 'bg-orange-800/50 text-orange-200/80 border-orange-200/60',
		icon: IconSvelte,
	},
	ANGULAR: {
		name: 'Angular',
		class: 'bg-rose-800/50 text-rose-200/80 border-rose-200/60',
		icon: IconAngular,
	},
	RUST: {
		name: 'Rust',
		class: 'bg-zinc-400/40 text-zinc-100/80 border-zinc-100/60',
		icon: IconRust,
	},
	TYPESCRIPT: {
		name: 'Typescript',
		class: 'bg-blue-800/50 text-blue-200/80 border-blue-200/60',
		icon: IconTypescript,
	},
};
const { PROJECTS_TITLE, PROYECTS } = Astro.props;

const projects = [
	{
		id: 'rusty-copier',
		title: 'Rusty Copier',
		githubLink: 'https://github.com/carlosjorger/rustycopier',
		imageSrc: '[&.visibleImg]:bg-rustycopier',
		...PROYECTS.RUSTY_COPIER,
		tags: [TAGS.RUST],
	},
	{
		id: 'online-cv-maker',

		title: 'Cuvimaker',
		githubLink: 'https://github.com/carlosjorger/cuvimaker',
		imageSrc: '[&.visibleImg]:bg-cuvimakerExample',
		website: 'https://cuvimaker.netlify.app/',
		...PROYECTS.CUVIMAKER,
		tags: [TAGS.ASTRO, TAGS.VUE, TAGS.TAILWIND],
	},
	{
		id: 'fluid-dnd',
		title: 'Fluid DnD',
		githubLink: 'https://github.com/carlosjorger/fluid-dnd/',
		imageSrc: '[&.visibleImg]:bg-vuefluiddnd',
		website: 'https://fluid-dnd.netlify.app/',
		...PROYECTS.VUE_FLUID_DND,
		tags: [TAGS.VUE, TAGS.REACT, TAGS.SVELTE, TAGS.TYPESCRIPT],
	},
] as Project[];
---

<SectionContainer id="work">
	<div class="flex flex-col p-2">
		<header class="reveal my-5">
			<Subtitle left>
				{PROJECTS_TITLE}
			</Subtitle>
		</header>
		<div class="grid grid-cols-2 gap-3 max-2xl:grid-cols-1">
			{
				projects.map((project, index) => (
					<Project
						class={
							projects.length % 2 == 1 &&
							index == projects.length - 1
								? 'col-[1/-1]'
								: ''
						}
						tagsClass={
							projects.length % 2 == 1 &&
							index == projects.length - 1
								? 'flex-row items-center max-lg:flex-col max-lg:items-start'
								: 'flex-col'
						}
						{...project}
					/>
				))
			}
		</div>
	</div>
</SectionContainer>
